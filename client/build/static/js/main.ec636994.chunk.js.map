{"version":3,"sources":["state/actions/action.js","components/login-form/loginForm.jsx","components/nav-bar/navBar.jsx","components/home-page/homePage.jsx","helpers.js","components/image-uploader/imageUploader.jsx","components/header/header.jsx","components/tweeter/tweeter.jsx","components/tweet/tweet.jsx","components/dashboard-feed/dashboardFeed.jsx","components/bio/bio.jsx","components/user-card/userCard.jsx","components/followers/followers.jsx","components/following/following.jsx","components/messages/messages.jsx","components/dashboard-page/dashboardPage.jsx","components/public-feed/publicFeed.jsx","components/public-page/publicPage.jsx","components/formValidators.js","components/settings-page/settingsPage.jsx","components/error-page/errorPage.jsx","components/registration-form/registrationForm.jsx","components/registration-page/registrationPage.jsx","components/login-page/loginPage.jsx","App.js","state/initialState.js","state/reducers/rootReducer.js","state/reducers/userReducer.js","state/reducers/profileReducer.js","serviceWorker.js","state/store.js","index.js"],"names":["setCurrentView","view","isUser","dispatch","type","payload","getProfileData","username","token","headers","x-auth-token","Promise","resolve","reject","axios","get","then","res","data","success","body","catch","error","console","log","getUserData","getFeed","reply","post","getUserCards","usernames","isDashboard","key","length","Object","defineProperty","put","uploadImage","base64","toString","objectSpread","selectedFileProfileImg","selectedFileBase64ProfileImg","selectedFileSplashImg","selectedFileBase64SplashImg","LoginForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formSubmitHandler","e","preventDefault","setState","isLoading","target","value","password","props","login","serverRes","renderSubmitBtn","state","react_default","a","createElement","className","Spinner","variant","animation","size","role","message","onSubmit","id","renderServerMsg","placeholder","name","Component","connect","sessionStorage","setItem","user","withRouter","NavBar","logOutHandler","getItem","logout","autoRouteHandler","prevProps","currentView","history","location","pathname","split","previousView","isLoggedIn","push","profile","getProfileUrl","concat","react_router_dom","to","index_es","icon","data-toggle","data-target","onClick","loginForm","removeItem","HomePage","getUsernameFromPath","path","pathArr","getFormattedDate","dateStr","includeTime","months","dateObj","Date","month","getMonth","date","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","amPm","time","getBackgroundImgCss","url","backgroundImage","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64FromUrl","img","Image","src","setAttribute","canvas","document","width","height","getContext","drawImage","dataURL","toDataURL","replace","ImageUploader","cancelUploadHandler","clearSelectedFile","fileInputChangeHandler","files","selectFile","fileUploadHandler","window","reload","renderBtns","changePhotoBtn","fileInput","click","Fragment","renderLoader","_this2","style","display","onChange","ref","Header","tabClickHandler","includes","getTabClassName","renderQuantityBadge","number","Badge","renderMessagesStat","position","stats","newMessages","messages","getSplashImgUrl","splashImgUrl","maxWidth","imageUploader","tweets","following","newFollowRequests","followers","likes","Tweeter","changeHandler","formValue","text","isReply","profileId","userId","tweetId","_id","tweet","buttonText","Tweet","handleLike","like","handleReply","toggleReplyModal","toggleLoginModal","handleDelete","deleteTweet","oldState","displayReplyModal","displayLoginModal","toggleViewReplies","viewReplies","renderLoginModal","Modal_default","centered","show","onHide","Title","aria-hidden","Body","renderTweeter","tweeter","renderReplyModal","Dialog","renderRepliesViewer","replyFeed","replies","slice","reverse","map","replyTweet","renderLikeIcon","renderDeleteIcon","renderReplyBtn","newProps","profileImgUrl","firstName","lastName","DashboardFeed","renderFeed","feed","tweet_tweet","Bio","renderName","source","renderUsername","renderEmail","settings","displayLocation","email","renderLocation","city","renderBio","bio","renderBirthday","displayBirthday","birthday","getProfileImgSrc","alt","dateJoined","UserCard","Followers","refreshUserCards","incomingFollowRequests","handleFollowRequest","accept","followRequestResponse","renderFollowers","followersUserCards","userCard","user_card_userCard","renderFollowRequests","incomingFollowRequestsUserCards","Following","outgoingFollowRequests","renderFollows","followingUserCards","renderPendingFollows","outgoingFollowRequestsUserCards","Messages","deleteMessageHandler","task","messageId","updateMessages","toggleMessageModal","showMessageModal","currentMessage","markRead","read","renderMessageModal","es_Modal","from","subject","getMessageBgColor","backgroundColor","renderMessages","stopPropagation","getMessages","DashboardPage","dashboardFeed","header","renderComponentBody","PublicFeed","hiddenTweets","PublicPage","renderFollowBtn","isFollowLoading","btnText","handleFollowBtn","follow","refreshProfileData","unlisten","listen","publicFeed","isRequired","minLength","passwordsMatch","value1","value2","isValidEmail","emailSplit","count","i","isAlphaOnly","regex","RegExp","test","isAlphaNumeric","SettingsPage","toggleEditProfileInfo","editProfileInfo","toggleChangePassword","changePassword","toggleDeleteAccount","deleteAccount","renderDeleteAccountForm","formChangeHandler","deleteAccountFormSubmitHandler","isPasswordFormLoading","formInputHandler","errors","deleteAccountPassword","renderChangePasswordForm","changePasswordFormSubmitHandler","oldPassword","newPassword","newPassword2","checked","validateField","isFormValid","keys","forEach","isDeleteFormLoading","editProfileFormSubmitHandler","isProfileFormLoading","displayEmail","isPrivate","updateUserData","setErrors","fillFormsWithProps","validatorResults","renderEditProfileForm","ErrorPage","RegistrationForm","password2","register","proxyUrl","all","results","renderValidationMsg","validationMsg","_this3","validChecks","RegistrationPage","registrationForm","LoginPage","library","add","fasHeart","farHeart","faReply","faCommentDots","faDove","faTimes","faCheck","faTrash","App","detectBrowserSession","navBar","react_router","component","exact","initialProfileState","profilePic","initialUserState","combineReducers","arguments","undefined","action","newState","tweetIndex","findIndex","initialState","Boolean","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec636994.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const setCurrentView = (view, isUser) => dispatch => {\r\n    if (isUser) {\r\n        dispatch({\r\n            type: 'SET_USER_CURRENT_VIEW',\r\n            payload: view\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: 'SET_PROFILE_CURRENT_VIEW',\r\n            payload: view\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (data) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('/api/auth/login', data).then(res => {\r\n            if (res.data.success) {\r\n                sessionStorage.setItem('twitterCloneToken', res.data.body.token)\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body.user\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const logout = (token) => dispatch => {\r\n    let headers = {\r\n        'x-auth-token': token\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('/api/auth/logout', {}, { headers }).then(res => {\r\n\r\n            if (res.data.success) {\r\n                sessionStorage.removeItem('twitterCloneToken')\r\n                dispatch({\r\n                    type: 'CLEAR_USER_STATE'\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const clearUserState = () => dispatch => {\r\n    dispatch({\r\n        type: 'CLEAR_USER_STATE'\r\n    })\r\n}\r\n\r\nexport const register = (data) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('/api/auth/register', data).then(res => {\r\n            console.log(res.data);\r\n            if (res.data.success) {\r\n                sessionStorage.setItem('twitterCloneToken', res.data.body.token)\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body.user\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const deleteAccount = (data, token) => dispatch => {\r\n    let headers = {\r\n        'x-auth-token': token\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('/api/auth/deleteAccount', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'CLEAR_USER_STATE',\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const getProfileData = (username, token) => dispatch => {\r\n    let headers = {\r\n        'x-auth-token': token\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.get('/api/public/' + username, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_PROFILE_STATE',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const getUserData = (token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.get('/api/user/getUserData', { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body\r\n                });\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const updateUserData = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.put('/api/user/updateUserData', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const changePassword = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.put('/api/user/changePassword', data, { headers }).then(res => {\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const getFeed = (token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.get('/api/user/getFeed', { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const tweet = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n        axios.post('/api/user/tweet', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const deleteTweet = (data, token, isDashboard) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n        console.log('making post request to server')\r\n        axios.post('/api/user/deleteTweet', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                if (isDashboard) {\r\n                    dispatch({\r\n                        type: 'UPDATE_USER_STATE',\r\n                        payload: res.data.body\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'UPDATE_PROFILE_STATE',\r\n                        payload: res.data.body\r\n                    })\r\n                }\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\n\r\nexport const like = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.post('/api/user/like', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_TWEET',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const reply = (data, token) => dispatch => {\r\n    console.log('reply action')\r\n    console.log(token)\r\n    console.log(data)\r\n    let headers = {\r\n        'x-auth-token': token\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('/api/user/reply', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_TWEET',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const follow = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.post('/api/user/follow', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_PROFILE_STATE',\r\n                    payload: res.data.body.profile\r\n                });\r\n\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body.user\r\n                });\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const followRequestResponse = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.post('/api/user/followRequestResponse', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: res.data.body\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const getMessages = (token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.get('/api/user/messages', { headers }).then(res => {\r\n            if (res.data.success) {\r\n                let payload = {\r\n                    stats: res.data.body.stats,\r\n                    messages: res.data.body.messages\r\n                }\r\n                dispatch({\r\n                    type: 'UPDATE_USER_MESSAGES',\r\n                    payload: payload\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const updateMessages = (data, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n\r\n        axios.post('/api/user/messages', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                let payload = {\r\n                    stats: res.data.body.stats,\r\n                    messages: res.data.body.messages\r\n                }\r\n                dispatch({\r\n                    type: 'UPDATE_USER_MESSAGES',\r\n                    payload: payload\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const getUserCards = (usernames, isDashboard, key) => dispatch => {\r\n    // get user cards from server and return res\r\n    return new Promise((resolve, reject) => {\r\n        if (usernames.length === 0) {\r\n            if (isDashboard) {\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: {\r\n                        [key]: []\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: 'UPDATE_PROFILE_STATE',\r\n                    payload: {\r\n                        [key]: []\r\n                    }\r\n                })\r\n            }\r\n            resolve('No Usercards')\r\n        } else {\r\n            axios.put('/api/public/getUserCards', { usernames: usernames }).then(res => {\r\n                if (res.data.success) {\r\n                    if (isDashboard) {\r\n                        dispatch({\r\n                            type: 'UPDATE_USER_STATE',\r\n                            payload: {\r\n                                [key]: res.data.body\r\n                            }\r\n                        });\r\n                    } else {\r\n                        dispatch({\r\n                            type: 'UPDATE_PROFILE_STATE',\r\n                            payload: {\r\n                                [key]: res.data.body\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                resolve(res);\r\n            }).catch(error => console.log(error));\r\n        }\r\n    });\r\n}\r\n\r\nexport const uploadImage = (base64, type, token) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let headers = {\r\n            'x-auth-token': token\r\n        }\r\n        /*\r\n         data = {\r\n             type: 'PROFILE'  OR 'SPLASH\r\n             base64: file from file input\r\n         }\r\n        */\r\n\r\n        let data = {\r\n            type: type,\r\n            base64: base64.toString()\r\n        }\r\n        console.log(data);\r\n\r\n        axios.post('/api/images/uploadImage', data, { headers }).then(res => {\r\n            if (res.data.success) {\r\n                let payload = { ...res.data.body };\r\n                if (type === 'PROFILE') {\r\n                    payload.selectedFileProfileImg = null;\r\n                    payload.selectedFileBase64ProfileImg = null;\r\n                } else {\r\n                    payload.selectedFileSplashImg = null;\r\n                    payload.selectedFileBase64SplashImg = null;\r\n                }\r\n                console.log(payload);\r\n                dispatch({\r\n                    type: 'UPDATE_USER_STATE',\r\n                    payload: payload\r\n                })\r\n            }\r\n            resolve(res.data);\r\n        }).catch(error => console.log(error));\r\n    }).catch(error => console.log(error));\r\n}\r\n\r\nexport const selectFile = (file, base64, type) => dispatch => {\r\n    let payload = null;\r\n\r\n    switch (type) {\r\n        case 'PROFILE':\r\n            payload = {\r\n                selectedFileProfileImg: file,\r\n                selectedFileBase64ProfileImg: base64\r\n            }\r\n            break;\r\n\r\n        case 'SPLASH':\r\n            payload = {\r\n                selectedFileSplashImg: file,\r\n                selectedFileBase64SplashImg: base64\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    dispatch({\r\n        type: 'UPDATE_USER_STATE',\r\n        payload: payload\r\n    })\r\n}\r\n\r\nexport const clearSelectedFile = (type) => dispatch => {\r\n    let payload = null;\r\n\r\n    if (type === 'PROFILE') {\r\n        payload = {\r\n            selectedFileProfileImg: null,\r\n            selectedFileBase64ProfileImg: null\r\n        }\r\n    } else if (type === 'SPLASH') {\r\n        payload = {\r\n            selectedFileSplashImg: null,\r\n            selectedFileBase64SplashImg: null\r\n        }\r\n    }\r\n\r\n    dispatch({\r\n        type: 'UPDATE_USER_STATE',\r\n        payload: payload\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../state/actions/action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (data) => dispatch(login(data)),\r\n});\r\n\r\n\r\nclass LoginForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      serverRes: {},\r\n      isLoading: false,\r\n    }\r\n  }\r\n\r\n  formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({isLoading : true});\r\n    let data = {\r\n      username: e.target.username.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.props.login(data).then(res => {\r\n      this.setState({ serverRes: res, isLoading: false });\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n  renderServerMsg() {\r\n    if (!this.state.serverRes.message) return null;\r\n\r\n    // Set className\r\n    let className = 'text-center small font-italic';\r\n\r\n    if (this.state.serverRes.success) {\r\n      className += ' text-success';\r\n    } else if (!this.state.serverRes.success) {\r\n      className += ' text-danger';\r\n    }\r\n\r\n    return (<p className={className}>*{this.state.serverRes.message}</p>);\r\n  }\r\n\r\n  renderSubmitBtn = () => {\r\n    if(this.state.isLoading){\r\n      return <div className=\"text-center\"><Spinner\r\n      variant = \"primary\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n    /></div>\r\n    } else {\r\n      return <input type=\"submit\" className=\"btn btn-sm btn-primary m-1\" value=\"Log in\" />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmitHandler} id=\"login-form\" className=\"form-group m-0 d-flex flex-row flex-wrap justify-content-center align-items-center bg-light\">\r\n        <div className=\"pt-2\">{this.renderServerMsg()}</div>\r\n        <input type=\"text\" className=\"form-control form-control-sm m-1\" placeholder=\"Username or email\" name=\"username\" />\r\n        <input type=\"password\" className=\"form-control form-control-sm m-1\" placeholder=\"Enter your password\" name=\"password\" />\r\n        {this.renderSubmitBtn()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport LoginForm from '../login-form/loginForm';\r\nimport { logout, setCurrentView } from '../../state/actions/action';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logout: (token) => dispatch(logout(token)),\r\n  setCurrentView: (view, isDashboard) => dispatch(setCurrentView(view, isDashboard))\r\n});\r\n\r\n\r\nclass NavBar extends Component {\r\n  logOutHandler = () => {\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    this.props.logout(token).then(res => {\r\n\r\n    }).catch(error => console.log(error));\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.autoRouteHandler(prevProps);\r\n  }\r\n\r\n  autoRouteHandler = (prevProps) => {\r\n    // This function handles auto-routing and resetting of views throughout the entire app based on changes to the state.\r\n    let currentView = this.props.history.location.pathname.split('/')[1];\r\n    let previousView = prevProps.history.location.pathname.split('/')[1];\r\n\r\n    switch (currentView) {\r\n      case '':\r\n        // If user logs in, route to dashboard\r\n        if (!prevProps.user.isLoggedIn && this.props.user.isLoggedIn) this.props.history.push('/dashboard');\r\n        break;\r\n\r\n      case 'login':\r\n        // If user logs in, route to dashboard\r\n        if (!prevProps.user.isLoggedIn && this.props.user.isLoggedIn) this.props.history.push('/dashboard');\r\n        break;\r\n\r\n      case 'registration':\r\n        // If user logs in, route to dashboard\r\n        if (!prevProps.user.isLoggedIn && this.props.user.isLoggedIn) this.props.history.push('/dashboard');\r\n        break;\r\n\r\n      case 'dashboard':\r\n        // If user logs out, route to /\r\n        if (!this.props.user.isLoggedIn) this.props.history.push('/');\r\n        break;\r\n\r\n      case 'profile':\r\n        // If user logs out, route to /\r\n        if (prevProps.user.isLoggedIn && !this.props.user.isLoggedIn) this.props.history.push('/');\r\n\r\n        // If user goes from one profile to another, reset profile current view to 'tweets'\r\n        if (previousView === 'profile' && prevProps.profile.username !== this.props.profile.username) this.props.setCurrentView('TWEETS', false)\r\n        break;\r\n\r\n      case 'settings':\r\n        // If user logs out, route to /\r\n        if (prevProps.user.isLoggedIn && !this.props.user.isLoggedIn) this.props.history.push('/');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getProfileUrl = () => {\r\n    if (this.props.user) {\r\n      return `/profile/${this.props.data.username}`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-light fixed-top bg-light shadow\">\r\n        <NavLink to={this.props.user.isLoggedIn ? '/dashboard' : '/'} className=\"navbar-brand\">\r\n          <FontAwesomeIcon className=\"fa-icon-link text-silver icon-md\" size=\"1x\" icon={['fas', 'dove']} />\r\n        </NavLink>\r\n        <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navBarMenu\"><span className=\"navbar-toggler-icon\"></span></button>\r\n\r\n        {this.props.user.isLoggedIn ? (\r\n          <div id=\"navBarMenu\" className=\"collapse navbar-collapse\">\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <div data-toggle=\"collapse\" data-target=\".navbar-collapse\" className=\"ml-auto\"><NavLink to=\"/dashboard\" className=\"nav-item nav-link\">Dashboard</NavLink></div>\r\n              <div data-toggle=\"collapse\" data-target=\".navbar-collapse\" className=\"ml-auto\"><NavLink to=\"/settings\" className=\"nav-item nav-link\">Settings</NavLink></div>\r\n              <div data-toggle=\"collapse\" data-target=\".navbar-collapse\" className=\"ml-auto\"><NavLink to={this.getProfileUrl()} className=\"nav-item nav-link\">{this.props.data.username}</NavLink></div>\r\n              <div data-toggle=\"collapse\" data-target=\".navbar-collapse\" className=\"ml-auto\"><p className=\"nav-item clickable nav-link m-0\" onClick={this.logOutHandler}>Log out</p></div>\r\n            </div>\r\n          </div>\r\n        ) : (<div id=\"navBarMenu\" className=\"ml-auto collapse navbar-collapse justify-content-end\"><LoginForm /></div>)}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../../state/actions/action';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUserData: (token) => dispatch(getUserData(token))\r\n\r\n});\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"home-page-container\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-md-6 pt-5 bg-primary d-flex align-items-center justify-content-center\">\r\n            <ul className=\"list-unstyled text-light\">\r\n              <li className=\"my-3\"><h5>Front end: React, Redux, Bootstrap</h5></li>\r\n              <li className=\"my-3\"><h5>Back end: NodeJS, Express</h5></li>\r\n              <li className=\"my-3\"><h5>Database: MongoDB</h5></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-6 d-flex align-items-center justify-content-center\">\r\n            <div className=\"d-flex flex-column\">\r\n              <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-md mb-2 text-primary\"/>\r\n              <h2>Connect with friends.</h2>\r\n              <h5 className=\"mb-5\">Sign up for free!</h5>\r\n              <NavLink to=\"/registration\" className=\"btn btn-primary my-1 text-light\">Sign Up</NavLink>\r\n              <NavLink to=\"/login\" className=\"btn btn-primary my-1 text-light\">Log in</NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HomePage));\r\n","export const alphabetize = (arr) => {\r\n    return arr\r\n}\r\n\r\nexport const getProfileUrl = (username) => {\r\n    return `/profile/${username}`;\r\n}\r\n\r\nexport const getUsernameFromPath = (path) => {\r\n    let pathArr = path.split('/')\r\n    if (pathArr[1] === 'profile') return pathArr[2];\r\n}\r\n\r\nexport const getFormattedDate = (dateStr, includeTime) => {\r\n    let months = 'January February March April May June July August September October November December'.split(' ');\r\n    let dateObj = new Date(dateStr);\r\n    let month = months[dateObj.getMonth() + 1];\r\n    let date = dateObj.getDate();\r\n    let year = dateObj.getFullYear();\r\n    let hours = dateObj.getHours();\r\n    let minutes = dateObj.getMinutes() > 10 ? dateObj.getMinutes() : '0' + dateObj.getMinutes();\r\n    let amPm = 'AM';\r\n\r\n    if (hours > 11) {\r\n        amPm = 'PM';\r\n        hours = hours - 12;\r\n        hours = hours === 0 ? 12 : hours;\r\n    }\r\n\r\n    let time = `${hours}:${minutes} ${amPm}`;\r\n\r\n    return `${month} ${date}, ${year} ${includeTime ? time : ''}`;\r\n}\r\n\r\nexport const getBackgroundImgCss = url => {\r\n    return {\r\n        backgroundImage: `url(${url})`\r\n    }\r\n}\r\n\r\nexport const getBase64 = file => {\r\n    // This function takes an image file as a parameter and returns a promise\r\n    // containing the image's base64 dataUrl\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  };\r\n\r\n  export const getBase64FromUrl = (url) => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image();\r\n        img.src = url;\r\n        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n\r\n        img.onload = () => {\r\n            let canvas = document.createElement(\"canvas\");\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.drawImage(img, 0, 0);\r\n            let dataURL = canvas.toDataURL(\"image/png\");\r\n            dataURL = dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n\r\n            resolve(dataURL); // the base64 string\r\n        }\r\n    })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { uploadImage, selectFile, clearSelectedFile } from '../../state/actions/action';\r\nimport { getBase64 } from '../../helpers';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    uploadImage: (base64, type, token) => dispatch(uploadImage(base64, type, token)),\r\n    selectFile: (file, base64, type) => dispatch(selectFile(file, base64, type)),\r\n    clearSelectedFile: (type) => dispatch(clearSelectedFile(type))\r\n});\r\n\r\n\r\nclass ImageUploader extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n    // This component handles image upload for both profile and splash images\r\n    // Selected files are stored in the store\r\n\r\n    cancelUploadHandler = () => {\r\n        this.props.clearSelectedFile(this.props.type);\r\n    }\r\n\r\n    fileInputChangeHandler = e => {\r\n        let file = e.target.files[0];\r\n\r\n        getBase64(file).then(base64 => {\r\n            this.props.selectFile(file, base64, this.props.type);\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    fileUploadHandler = () => {\r\n        this.setState({ isLoading: true })\r\n        let base64 = this.props.type === 'PROFILE' ? this.props.user.selectedFileBase64ProfileImg : this.props.user.selectedFileBase64SplashImg;\r\n        let token = sessionStorage.getItem('twitterCloneToken');\r\n        let type = this.props.type;\r\n\r\n        this.props.uploadImage(base64, type, token).then(res => {\r\n            if (res.success) {\r\n                this.setState({ isLoading: false });\r\n                // I think browser cache was causing previous image to appear even when\r\n                // new image successfully uploaded.  Force refresh to work around this problem.\r\n                window.location.reload();\r\n            }\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    renderBtns = () => {\r\n        let changePhotoBtn = <button className=\"btn btn-block mt-1 btn-sm btn-primary mb-1\" onClick={() => this.fileInput.click()}>Change photo</button>\r\n\r\n        if (this.props.type === 'PROFILE' && this.props.user.selectedFileProfileImg) {\r\n\r\n            return <React.Fragment>\r\n                {changePhotoBtn}\r\n                {this.state.isLoading ? this.renderLoader() : <button className=\"btn btn-block btn-sm btn-success mb-1\" onClick={this.fileUploadHandler}>Save</button>}\r\n                <button className=\"btn btn-block btn-sm btn-danger mb-1\" onClick={this.cancelUploadHandler}>Cancel</button>\r\n            </React.Fragment>\r\n        } else if (this.props.type === 'SPLASH' && this.props.user.selectedFileSplashImg) {\r\n\r\n            return <React.Fragment>\r\n                {changePhotoBtn}\r\n                {this.state.isLoading ? this.renderLoader() : <button className=\"btn btn-block btn-sm btn-success mb-1\" onClick={this.fileUploadHandler}>Save</button>}\r\n                <button className=\"btn btn-block btn-sm btn-danger my-2\" onClick={this.cancelUploadHandler}>Cancel</button>\r\n            </React.Fragment>\r\n        } else {\r\n            return changePhotoBtn\r\n        }\r\n    }\r\n\r\n    renderLoader = () => {\r\n        return <div className=\"text-center my-2\"><Spinner\r\n            variant=\"success\"\r\n            animation=\"border\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n        /></div>\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n            <input type=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={this.fileInputChangeHandler}\r\n                ref={fileInput => this.fileInput = fileInput} />\r\n\r\n            {this.renderBtns()}\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploader);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentView, getUserData } from '../../state/actions/action';\r\nimport { Badge } from 'react-bootstrap';\r\nimport { getBackgroundImgCss } from '../../helpers';\r\nimport ImageUploader from '../image-uploader/imageUploader';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentView: (view, isUser) => dispatch(setCurrentView(view, isUser)),\r\n  getUserData: (token) => dispatch(getUserData(token))\r\n});\r\n\r\nclass Header extends Component {\r\n\r\n\r\n  tabClickHandler = (view) => {\r\n    let viewOptions = ['TWEETS', 'FOLLOWING', 'FOLLOWERS', 'MESSAGES'];\r\n\r\n    if (viewOptions.includes(view)) {\r\n      this.props.getUserData(sessionStorage.getItem('twitterCloneToken'));\r\n      this.props.setCurrentView(view, this.props.isDashboard);\r\n    }\r\n  }\r\n\r\n  getTabClassName = () => {\r\n    return `header-btn stat-box list-unstyled px-2 py-3 m-0 text-center d-flex flex-column align-items-center justify-content-center`;\r\n  }\r\n\r\n  renderQuantityBadge = (number) => {\r\n    if (this.props.isDashboard && number > 0) {\r\n      return <Badge className=\"quantity-badge\" variant=\"danger\">{number}</Badge>\r\n    }\r\n  }\r\n\r\n  renderMessagesStat = () => {\r\n    if (this.props.isDashboard) {\r\n      return (\r\n        <ul onClick={() => this.tabClickHandler('MESSAGES')} className={this.getTabClassName()}>\r\n          <li><p style={{position: \"relative\"}} className=\"my-0 mx-auto\">{this.renderQuantityBadge(this.props.stats.newMessages)}Messages</p></li>\r\n          <li className=\"font-weight-bold\">{this.props.stats.messages}</li>\r\n        </ul>\r\n      )\r\n    }\r\n  }\r\n\r\n  getSplashImgUrl = () => {\r\n    if(this.props.isDashboard){\r\n      if(this.props.user.selectedFileBase64SplashImg) {\r\n        return this.props.user.selectedFileBase64SplashImg;\r\n      } else {\r\n        return this.props.user.splashImgUrl;\r\n      }\r\n    } else {\r\n      return this.props.profile.splashImgUrl;\r\n    }\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div style={{ maxWidth: '100vw' }}>\r\n        <div id=\"splash-container\" className=\"overflow-hidden d-flex flex-row pb-2 justify-content-center align-items-end\" style={getBackgroundImgCss(this.getSplashImgUrl())}>\r\n        {this.props.isDashboard ? <ImageUploader type=\"SPLASH\"/> : null}\r\n        </div>\r\n\r\n        <div id=\"tab-container\" className=\"bg-light shadow-sm my-0 p-0 d-flex flex-row flex-wrap justify-content-center align-items center\">\r\n          <ul onClick={() => this.tabClickHandler('TWEETS')} className={this.getTabClassName()}>\r\n            <li><p style={{position: \"relative\"}} className=\"my-0 mx-auto\">Tweets</p></li>\r\n            <li className=\"font-weight-bold\">{this.props.stats.tweets}</li>\r\n          </ul>\r\n\r\n          {this.renderMessagesStat()}\r\n\r\n          <ul onClick={() => this.tabClickHandler('FOLLOWING')} className={this.getTabClassName()}>\r\n            <li><p style={{position: \"relative\"}} className=\"my-0 mx-auto\">Following</p></li>\r\n            <li className=\"font-weight-bold\">{this.props.stats.following}</li>\r\n          </ul>\r\n\r\n          <ul onClick={() => this.tabClickHandler('FOLLOWERS')} className={this.getTabClassName()}>\r\n            <li><p style={{position: \"relative\"}} className=\"my-0 mx-auto\">{this.renderQuantityBadge(this.props.stats.newFollowRequests)}Followers</p></li>\r\n            <li className=\"font-weight-bold\">{this.props.stats.followers}</li>\r\n          </ul>\r\n\r\n          <ul className={this.getTabClassName()}>\r\n            <li><p style={{position: \"relative\"}} className=\"my-0 mx-auto\">Likes</p></li>\r\n            <li className=\"font-weight-bold\">{this.props.stats.likes}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { tweet, reply, getFeed } from '../../state/actions/action';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  tweet: (data, token) => dispatch(tweet(data, token)),\r\n  reply: (data, token) => dispatch(reply(data, token)),\r\n  getFeed: (token) => dispatch(getFeed(token))\r\n});\r\n\r\nclass Tweeter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: false,\r\n      formValue: '',\r\n      placeholder: 'Write a new tweet!',\r\n    }\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ formValue: e.target.value });\r\n  }\r\n\r\n  formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.formValue) {\r\n      this.setState({ isLoading: true });\r\n      let token = sessionStorage.getItem('twitterCloneToken');\r\n      let data = {\r\n        text: this.state.formValue\r\n      }\r\n\r\n      if (this.props.isReply) {\r\n        data.profileId = this.props.data.userId;\r\n        data.tweetId = this.props.data._id;\r\n\r\n        this.props.reply(data, token).then(res => {\r\n          if (res.success) {\r\n            this.setState({ formValue: '', isLoading: false })\r\n          }\r\n        }).catch(error => console.log(error));\r\n\r\n      } else if (!this.props.isReply) {\r\n        this.props.tweet(data, token).then(res => {\r\n          if (res.success) {\r\n            this.setState({ formValue: '', isLoading: false });\r\n            this.props.getFeed(token).catch(error => console.log(error));\r\n          }\r\n        }).catch(error => console.log(error));\r\n      }\r\n    }\r\n  }\r\n\r\n  renderSubmitBtn = () => {\r\n    let buttonText = this.props.isReply ? 'Reply' : 'Tweet';\r\n\r\n    if (this.state.isLoading) {\r\n      return <div className=\"text-center\"><Spinner\r\n        variant=\"primary\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n      /></div>\r\n    } else {\r\n      return <button className=\"btn btn-primary\" onClick={this.formSubmitHandler}>{buttonText}</button>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"text-right\">\r\n        <textarea type=\"text\" className=\"mb-2 w-100\" placeholder={this.state.placeholder} value={this.state.formValue} onChange={this.changeHandler} />\r\n        {this.renderSubmitBtn()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tweeter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { like, reply, deleteTweet } from '../../state/actions/action';\r\nimport Tweeter from '../tweeter/tweeter';\r\nimport './style.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport LoginForm from '../login-form/loginForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { getProfileUrl, getFormattedDate, getBackgroundImgCss } from '../../helpers';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  like: (data, token) => dispatch(like(data, token)),\r\n  reply: (data, token) => dispatch(reply(data, token)),\r\n  deleteTweet: (data, token, isDashboard) => dispatch(deleteTweet(data, token, isDashboard))\r\n});\r\n\r\n\r\nclass Tweet extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      displayReplyModal: false,\r\n      displayLoginModal: false,\r\n      viewReplies: false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    // Reply modal: On reply tweet success, close reply modal\r\n    if (newProps.data.replies.length === this.props.data.replies.length + 1) {\r\n      this.setState({ displayReplyModal: false })\r\n    }\r\n  }\r\n\r\n  handleLike = () => {\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    let data = {\r\n      profileId: this.props.data.userId,\r\n      tweetId: this.props.data._id\r\n    }\r\n\r\n    this.props.like(data, token).catch(error => console.log(error));\r\n  }\r\n\r\n  handleReply = () => {\r\n    if (!this.props.user.isLoggedIn) {\r\n      this.toggleLoginModal();\r\n    } else {\r\n      this.toggleReplyModal();\r\n    }\r\n  }\r\n\r\n  handleDelete = () => {\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    let data = {\r\n      tweet: this.props.data\r\n    }\r\n\r\n    this.props.deleteTweet(data, token, this.props.isDashboard).then(res => {\r\n      console.log(res)\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n  toggleReplyModal = () => {\r\n    this.setState(oldState => ({ displayReplyModal: !oldState.displayReplyModal }));\r\n  }\r\n\r\n  toggleLoginModal = () => {\r\n    this.setState(oldState => ({ displayLoginModal: !oldState.displayLoginModal }));\r\n  }\r\n\r\n  toggleViewReplies = () => {\r\n    this.setState(oldState => ({ viewReplies: !oldState.viewReplies }));\r\n  }\r\n\r\n  getFormattedDate = (dateStr) => {\r\n    let months = 'January February March April May June July August September October November December'.split(' ');\r\n    let dateObj = new Date(dateStr);\r\n    let month = months[dateObj.getMonth() + 1];\r\n    let date = dateObj.getDate();\r\n    let year = dateObj.getFullYear();\r\n    let hours = dateObj.getHours();\r\n    let minutes = dateObj.getMinutes() > 10 ? dateObj.getMinutes() : '0' + dateObj.getMinutes();\r\n    let amPm = 'AM';\r\n\r\n    if (hours > 11) {\r\n      amPm = 'PM';\r\n      hours = hours - 12;\r\n      hours = hours === 0 ? 12 : hours;\r\n    }\r\n\r\n    return `${month} ${date}, ${year} ${hours}:${minutes} ${amPm}`;\r\n  }\r\n\r\n  renderLoginModal = () => {\r\n    if (this.state.displayLoginModal) {\r\n      return (\r\n        <Modal centered className=\"px-auto mx-auto\" show={this.state.displayLoginModal} onHide={this.toggleLoginModal}>\r\n          <div className=\"modal-content overflow-hidden\">\r\n            <Modal.Header className=\"m-0 px-2 py-1\">\r\n              <Modal.Title className=\"h5\">Log in</Modal.Title>\r\n              <button type=\"button\" className=\"close\" onClick={this.toggleLoginModal}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 m-0\">\r\n              <div className=\"bg-light py-4\"><LoginForm /></div>\r\n            </Modal.Body>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderTweeter = () => {\r\n    return <Tweeter isReply={true} data={this.props.data} />\r\n  }\r\n\r\n  renderReplyModal = () => {\r\n    if (this.state.displayReplyModal) {\r\n      return (\r\n        <Modal.Dialog size=\"lg\">\r\n          <Modal.Header className=\"m-0 px-2 py-1\">\r\n            <Modal.Title className=\"h5\">Reply</Modal.Title>\r\n            <button type=\"button\" className=\"close\" onClick={this.toggleReplyModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body className=\"p-3 m-0\">\r\n            {this.renderTweeter()}\r\n          </Modal.Body>\r\n        </Modal.Dialog>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderRepliesViewer = () => {\r\n    if (this.state.viewReplies) {\r\n      let replyFeed = this.props.data.replies.slice().reverse().map(replyTweet => <Tweet key={replyTweet._id} data={replyTweet} isReply=\"true\" />);\r\n\r\n      return (\r\n        <Modal centered className=\"px-auto mx-auto\" show={this.state.viewReplies} onHide={this.toggleViewReplies}>\r\n          <div className=\"modal-content overflow-hidden\">\r\n            <Modal.Header className=\"m-0 px-2 py-1\">\r\n              <Modal.Title className=\"h5\">View Replies</Modal.Title>\r\n              <button type=\"button\" className=\"close\" onClick={this.toggleViewReplies}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 m-0 d-flex flex-column justify-content-center align-items-center\">\r\n              {this.props.data.replies.length ? replyFeed : <p className=\"mx-auto text-sm-center mt-3 mx-auto font-italic\">This tweet does not have any replies.</p>}\r\n            </Modal.Body>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderLikeIcon = () => {\r\n    if (this.props.data.likes.includes(this.props.user.username)) {\r\n      return <FontAwesomeIcon className=\"fa-icon-link text-silver icon-sm clickable\" icon={['fas', 'heart']} onClick={this.handleLike} />;\r\n    } else {\r\n      return <FontAwesomeIcon className=\"fa-icon-link text-silver icon-sm clickable\" icon={['far', 'heart']} onClick={this.handleLike} />;\r\n    }\r\n  }\r\n\r\n  renderDeleteIcon = () => {\r\n    if (this.props.user) {\r\n      if (this.props.data.username === this.props.user.username) {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n          <FontAwesomeIcon className=\"fa-icon-link text-silver icon-sm clickable\" icon={['fas', 'trash']} onClick={this.handleDelete} /></div>;\r\n      }\r\n    }\r\n  }\r\n\r\n  renderReplyBtn = () => {\r\n    if (this.props.user.isLoggedIn) {\r\n      if (this.props.user.following.includes(this.props.data.username) || this.props.user.username === this.props.data.username) {\r\n        return <div className=\"d-flex justify-content-center align-items-center\">\r\n          <FontAwesomeIcon className=\"fa-icon-link text-silver icon-sm clickable\" icon={['fas', 'reply']} onClick={this.handleReply} />\r\n        </div>\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid p-2 my-0 text-right bg-light shadow\">\r\n        <div className=\"container d-flex\">\r\n          <div className=\"tweet-portrait-container\" style={getBackgroundImgCss(this.props.data.profileImgUrl)}>\r\n            {/* <img src={this.props.data.profileImgUrl} /> */}\r\n          </div>\r\n\r\n          <div className=\"ml-3 my-0 flex-grow-1\">\r\n            <div className=\"d-flex flex-row flex-wrap justify-content-between tweet-header\">\r\n              <div className=\"d-flex flex-column align-items-start\">\r\n                <p className=\"font-weight-bold my-0\">{this.props.data.firstName}, {this.props.data.lastName}</p>\r\n                <NavLink className=\"text-secondary my-0\" to={getProfileUrl(this.props.data.username)}>@{this.props.data.username}</NavLink>\r\n              </div>\r\n              <p className=\"text-secondary\">{getFormattedDate(this.props.data.date)}</p>\r\n            </div>\r\n\r\n            <p className=\"tweet-body m-0 pt-2 pb-4\">{this.props.data.text}</p>\r\n            {this.props.isReply ? null :\r\n              <div className=\"d-flex mx-auto p-0 btn-group-sm justify-content-between\">\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <p className=\"my-0 mx-1 p-0 text-silver\">{this.props.data.likes.length}</p>\r\n                  {this.renderLikeIcon()}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <p className=\"my-0 mx-1 p-0 text-silver\">{this.props.data.replies.length}</p>\r\n                  <FontAwesomeIcon className=\"fa-icon-link text-silver icon-sm clickable\" icon={['fas', 'comment-dots']} onClick={this.toggleViewReplies} />\r\n                </div>\r\n\r\n                {this.renderReplyBtn()}\r\n\r\n                {this.renderDeleteIcon()}\r\n\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {this.renderReplyModal()}\r\n        {this.renderLoginModal()}\r\n        {this.renderRepliesViewer()}\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Tweet));\r\n","import React, { Component } from 'react';\r\nimport Tweeter from '../tweeter/tweeter';\r\nimport Tweet from '../tweet/tweet';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getFeed } from '../../state/actions/action';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getFeed: (token) => dispatch(getFeed(token))\r\n});\r\n\r\n\r\nclass DashboardFeed extends Component {\r\n\r\n  componentWillMount() {\r\n    // Fetch feed data from server\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    if (this.props.user.following.length > 0) {\r\n      this.props.getFeed(token).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  renderFeed = () => {\r\n    let feed = this.props.user.feed.slice().reverse()\r\n    if (feed.length) {\r\n      return feed.map((tweet) => <Tweet isDashboard={true} data={tweet} key={tweet._id}/>);\r\n    } else {\r\n      return <p className=\"font-italic text-secondary\">No feed.</p>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n        <h5>Feed:</h5>\r\n        <div className=\"shadow mb-3 p-4 bg-light\">\r\n          <Tweeter />\r\n        </div>\r\n        {this.renderFeed()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardFeed);\r\n","import React, { Component } from 'react';\r\nimport { getFormattedDate } from '../../helpers';\r\nimport { connect } from 'react-redux';\r\nimport ImageUploader from '../image-uploader/imageUploader';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\n\r\nclass Bio extends Component {\r\n\r\n  renderName = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    return <h5 className=\"font-weight-bold\">{source.firstName}, {source.lastName}</h5>\r\n  }\r\n\r\n  renderUsername = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    return <p className=\"text-secondary mb-1\">@{source.username}</p>\r\n  }\r\n\r\n  renderEmail = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    if (source.settings.displayLocation) return <p className=\"m-0\">{source.email}</p>\r\n  }\r\n\r\n  renderLocation = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    if (source.settings.displayLocation) return <p className=\"m-0\">{source.city}, {source.state}</p>\r\n  }\r\n\r\n  renderBio = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    return <p className=\"my-3 font-italic\">{source.bio}</p>\r\n  }\r\n\r\n  renderBirthday = () => {\r\n    let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n    if(source.settings.displayBirthday) return <p className=\"my-0 text-secondary\">Birthday: {source.birthday}</p>\r\n  }\r\n\r\n  getProfileImgSrc = () => {\r\n    if(this.props.isDashboard) {\r\n      if(this.props.user.selectedFileBase64ProfileImg) {\r\n        return this.props.user.selectedFileBase64ProfileImg;\r\n      } else {\r\n        return this.props.user.profileImgUrl;\r\n      }\r\n    } else {\r\n      return this.props.profile.profileImgUrl;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-row flex-wrap\">\r\n        <div id=\"portrait-container\" className=\"mb-2 mr-3\">\r\n          <img className=\"img-thumbnail\" src={this.getProfileImgSrc()} alt=\"Profile\"/>\r\n          {this.props.isDashboard ? <ImageUploader type=\"PROFILE\"/> : null}\r\n\r\n        </div>\r\n\r\n        \r\n        <div id=\"bio-text-container\">\r\n          {this.renderName()}\r\n          {this.renderUsername()}\r\n          {this.renderEmail()}\r\n          {this.renderLocation()}\r\n          {this.renderBio()}\r\n          {this.renderBirthday()}\r\n          <p className=\"my-0 text-secondary\">Joined: {getFormattedDate(this.props.data.dateJoined)}</p>\r\n\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bio);\r\n","import React, { Component } from 'react';\r\nimport { getProfileUrl, getBackgroundImgCss } from '../../helpers';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-card shadow bg-light d-flex flex-column align-items-center justify-content-end m-2 p-0\"\r\n                style={getBackgroundImgCss(this.props.data.splashImgUrl)}>\r\n\r\n                <div className=\"user-card-portrait-container\" style={getBackgroundImgCss(this.props.data.profileImgUrl)}></div>\r\n\r\n                <div className=\"user-card-text-container text-left mt-0 mx-0 px-2 pt-3 container-fluid\">\r\n                    <p className=\"m-0 p-0 small\">{this.props.data.firstName} {this.props.data.lastName}</p>\r\n                    <NavLink className=\"m-0 p-0 text-secondary\" to={getProfileUrl(this.props.data.username)}>@{this.props.data.username}</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserCard from '../user-card/userCard';\r\nimport { followRequestResponse, getUserCards } from '../../state/actions/action';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    followRequestResponse: (data, token) => dispatch(followRequestResponse(data, token)),\r\n    getUserCards: (usernames, isDashboard, key) => dispatch(getUserCards(usernames, isDashboard, key))\r\n});\r\n\r\nclass Followers extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.refreshUserCards();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isDashboard) {\r\n            if (prevProps.user.followers !== this.props.user.followers ||\r\n                prevProps.user.incomingFollowRequests !== this.props.user.incomingFollowRequests) {\r\n                this.refreshUserCards();\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshUserCards = () => {\r\n        this.setState({ isLoading: true })\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        // Update store with userCards for FOLLOWERS\r\n        this.props.getUserCards(source.followers, this.props.isDashboard, 'followersUserCards').then(res => {\r\n            this.setState({ isLoading: false })\r\n        }).catch(error => console.log(error));\r\n\r\n        // Update store with userCards for INCOMING FOLLOW REQUESTS\r\n        if (this.props.isDashboard) {\r\n            this.props.getUserCards(source.incomingFollowRequests, this.props.isDashboard, 'incomingFollowRequestsUserCards').then(res => {\r\n                this.setState({ isLoading: false })\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    handleFollowRequest = (username, accept) => {\r\n        let token = sessionStorage.getItem('twitterCloneToken');\r\n        let data = {\r\n            username: username,\r\n            accept: accept\r\n        }\r\n\r\n        // Action updates the store, which should update the UI.  No need for any follow up here.\r\n        this.props.followRequestResponse(data, token).catch(error => console.log(error));\r\n    }\r\n\r\n    renderFollowers = () => {\r\n        if (this.state.isLoading) {\r\n            return <div className=\"container text-center py-4\"><Spinner animation=\"border\" variant=\"primary\" /></div>\r\n        }\r\n\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        if (source.followers.length === 0) {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <p className=\"text-center small font-italic my-5 text-secondary\">\r\n                        {source.username} has no followers.</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div className=\"d-flex flex-row flex-wrap mb-5 user-cards-container\">\r\n                {source.followersUserCards.map(userCard =>\r\n                (<UserCard data={userCard} />))}\r\n             </div>\r\n\r\n        }\r\n    }\r\n\r\n    renderFollowRequests = () => {\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        if (this.state.isLoading) return null;\r\n\r\n        // Only render follow requests for dashboard component.\r\n        if (!this.props.isDashboard) {\r\n            return null\r\n        } else if (source.incomingFollowRequestsUserCards.length > 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                    <h5>Follow Requests:</h5>\r\n                    <div className=\"d-flex flex-row mb-5 user-cards-container\">\r\n                        {source.incomingFollowRequestsUserCards.map(userCard => (\r\n                            <div className=\"text-center\">\r\n                                <UserCard data={userCard} />\r\n\r\n                                <div className=\"request-btn-container\">\r\n                                    <button\r\n                                        className=\"btn btn-success request-btn mx-1 shadow text-center\"\r\n                                        onClick={() => this.handleFollowRequest(userCard.username, true)}>\r\n                                        <FontAwesomeIcon icon={['fas', 'check']} className=\"text-light\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                        className=\"btn btn-danger request-btn mx-1 shadow text-center\"\r\n                                        onClick={() => this.handleFollowRequest(userCard.username, false)}>\r\n                                        <FontAwesomeIcon icon={['fas', 'times']} className=\"text-light\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFollowRequests()}\r\n\r\n                <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                <h5>Followers:</h5>\r\n                <div className=\"d-flex flex-row flex-wrap\">\r\n                    {this.renderFollowers()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Followers);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserCard from '../user-card/userCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getUserCards } from '../../state/actions/action';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUserCards: (usernames, isDashboard, key) => dispatch(getUserCards(usernames, isDashboard, key))\r\n});\r\n\r\nclass Following extends Component {\r\n    componentWillMount() {\r\n        this.refreshUserCards();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isDashboard) {\r\n            if (prevProps.user.following !== this.props.user.following ||\r\n                prevProps.user.outgoingFollowRequests !== this.props.user.outgoingFollowRequests) {\r\n                this.refreshUserCards();\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshUserCards = () => {\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        // Update store with userCards for FOLLOWERS\r\n        this.props.getUserCards(source.following, this.props.isDashboard, 'followingUserCards')\r\n            .catch(error => console.log(error));\r\n\r\n        // Update store with userCards for INCOMING FOLLOW REQUESTS\r\n        if (this.props.isDashboard) {\r\n            this.props.getUserCards(source.outgoingFollowRequests, this.props.isDashboard, 'outgoingFollowRequestsUserCards')\r\n                .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    renderFollows = () => {\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        if (source.following.length === 0) {\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <p className=\"text-center small font-italic my-5 text-secondary\">\r\n                        {source.username} is not following anyone.</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div className=\"d-flex flex-row flex-wrap mb-5 user-cards-container\">\r\n                {source.followingUserCards.map(userCard =>\r\n                    (<UserCard data={userCard} />))}\r\n            </div>\r\n        }\r\n    }\r\n\r\n    renderPendingFollows = () => {\r\n        let source = this.props.isDashboard ? this.props.user : this.props.profile;\r\n\r\n        // Only render pending follows for dashboard component\r\n        if (!this.props.isDashboard) {\r\n            return null\r\n        } else if (source.outgoingFollowRequests.length > 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                    <h5>Pending:</h5>\r\n                    <div className=\"d-flex flex-row flex-wrap mb-5 user-cards-container\">\r\n                        {source.outgoingFollowRequestsUserCards.map(userCard => (\r\n                            <UserCard data={userCard} />\r\n                        ))}\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPendingFollows()}\r\n\r\n                <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                <h5>Following:</h5>\r\n                <div className=\"d-flex flex-row flex-wrap\">\r\n                    {this.renderFollows()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Following);\r\n","import React, { Component } from \"react\";\r\nimport { getMessages, updateMessages } from \"../../state/actions/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Spinner } from \"react-bootstrap\";\r\nimport { getFormattedDate } from '../../helpers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport \"./style.css\";\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMessages: token => dispatch(getMessages(token)),\r\n  updateMessages: (data, token) => dispatch(updateMessages(data, token))\r\n});\r\n\r\nclass Messages extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMessageModal: false,\r\n      messages: [],\r\n      currentMessage: {},\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props\r\n      .getMessages(sessionStorage.getItem(\"twitterCloneToken\"))\r\n      .then(res => {\r\n        this.setState({ messages: res.body.messages, isLoading: false })\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessageHandler = message => {\r\n    let data = {\r\n      task: \"DELETE\",\r\n      messageId: message._id\r\n    };\r\n\r\n    let token = sessionStorage.getItem(\"twitterCloneToken\");\r\n\r\n    this.props\r\n      .updateMessages(data, token)\r\n      .then(res => {\r\n        this.setState({ messages: res.body.messages })\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  toggleMessageModal = (message) => {\r\n    this.setState(state => ({\r\n      showMessageModal: !state.showMessageModal,\r\n      currentMessage: message ? message : {}\r\n    }));\r\n  };\r\n\r\n  markRead = message => {\r\n    if (message.read === false) {\r\n      let data = {\r\n        task: 'READ',\r\n        messageId: message._id\r\n      }\r\n      let token = sessionStorage.getItem('twitterCloneToken');\r\n\r\n      this.props.updateMessages(data, token).then(res => {\r\n        this.setState({ messages: res.body.messages });\r\n      });\r\n    }\r\n  }\r\n\r\n  renderMessageModal = () => {\r\n    return (\r\n      <Modal\r\n        centered\r\n        className=\"px-auto mx-auto\"\r\n        show={this.state.showMessageModal}\r\n        onHide={this.toggleMessageModal}\r\n      >\r\n        <div className=\"modal-content overflow-hidden\">\r\n          <Modal.Header className=\"m-0 px-2 py-1\">\r\n            <Modal.Title className=\"h5\">View Message</Modal.Title>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              onClick={this.toggleMessageModal}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-3 m-0\">\r\n            <p className=\"my-0\"><span className=\"font-weight-bold\">Date:</span> {getFormattedDate(this.state.currentMessage.date, true)}</p>\r\n            <p className=\"my-0\"><span className=\"font-weight-bold\">From:</span> {this.state.currentMessage.from}</p>\r\n            <p className=\"my-0\"><span className=\"font-weight-bold\">Subject:</span> {this.state.currentMessage.subject}</p>\r\n            <p className=\"py-3\">{this.state.currentMessage.body}</p>\r\n          </Modal.Body>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  getMessageBgColor = (read) => {\r\n    switch (read) {\r\n      case true:\r\n        return { backgroundColor: '#ebebeb' };\r\n      case false:\r\n        return { backgroundColor: 'none' };\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  renderMessages = () => {\r\n    if (this.state.isLoading) {\r\n      return <div className=\"container text-center py-4\"><Spinner animation=\"border\" variant=\"primary\" /></div>\r\n    }\r\n\r\n    if (this.state.messages.length === 0) {\r\n      return <div className=\"container\"><p className=\"font-italic text-secondary text-center py-4\">You have no messages.</p></div>\r\n    } else {\r\n      return (\r\n        <div id=\"messages-container\">\r\n          {this.state.messages.map(message => (\r\n            <React.Fragment>\r\n              <div\r\n                style={this.getMessageBgColor(message.read)}\r\n                className=\"row m-0 p-0 d-flex message-row flex-row flex-nowrap justify-content-start align-items-center\"\r\n                onClick={() => {\r\n                  this.toggleMessageModal(message);\r\n                  this.markRead(message)\r\n                }}\r\n              >\r\n                <p className=\"col-md-3 m-0 px-2 py-1 small message-date\">{getFormattedDate(message.date, true)}</p>\r\n                <p className=\"col-md-3 m-0 p-1 message-from\">{message.from}</p>\r\n                <p className=\"col-md-5 m-0 p-1 message-subject\">{message.subject}</p>\r\n\r\n                <FontAwesomeIcon icon={['fas', 'trash']} onClick={(e) => { e.stopPropagation(); this.deleteMessageHandler(message) }}\r\n                  className=\"col-md-1 mr-2 p-0 clickable trash-icon\" />\r\n              </div>\r\n\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n        <h5>Messages:</h5>\r\n        <div className=\"bg-light shadow\">\r\n          <div id=\"messages-container-header-bar\" className=\"row row m-0 p-0 d-flex flex-row flex-nowrap justify-content-start align-items-center\">\r\n            <p className=\"col-md-3 m-0 p-2 font-weight-bold\">Date</p>\r\n            <p className=\"col-md-3 m-0 p-2 font-weight-bold\">Sender</p>\r\n            <p className=\"col-md-5 m-0 p-2 font-weight-bold\">Subject</p>\r\n          </div>\r\n\r\n          {this.renderMessages()}\r\n        </div>\r\n        {this.renderMessageModal()}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Messages);\r\n","import React, { Component } from 'react';\r\nimport Header from '../header/header'\r\nimport DashboardFeed from '../dashboard-feed/dashboardFeed'\r\nimport Bio from '../bio/bio';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport { setCurrentView } from '../../state/actions/action';\r\nimport Followers from '../followers/followers';\r\nimport Following from '../following/following';\r\nimport Messages from '../messages/messages';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentView: (view, isDashboard) => dispatch(setCurrentView(view, isDashboard))\r\n});\r\n\r\n\r\nclass DashboardPage extends Component {\r\n  componentWillMount() {\r\n    this.props.setCurrentView('TWEETS', true)\r\n  }\r\n\r\n  renderComponentBody() {\r\n    switch (this.props.user.currentView) {\r\n      case 'TWEETS':\r\n        return <DashboardFeed />\r\n      case 'FOLLOWERS':\r\n        return <Followers isDashboard={true} />\r\n      case 'FOLLOWING':\r\n        return <Following isDashboard={true} />\r\n      case 'MESSAGES':\r\n        return <Messages />\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderLoader = () => {\r\n    return <div className=\"text-center my-5 py-5 container-fluid\"><Spinner\r\n      variant=\"primary\"\r\n      animation=\"border\"\r\n      role=\"status\"\r\n    /></div>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pb-5\">\r\n        <Header\r\n          stats={this.props.user.stats}\r\n          splashImgUrl={this.props.user.splashImgUrl}\r\n          isDashboard={true} />\r\n\r\n        {this.props.user.username === null ? this.renderLoader() :\r\n          <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3 mb-5\">\r\n                <Bio data={this.props.user} isDashboard={true} />\r\n              </div>\r\n\r\n              <div className=\"col-md-7 mb-2 mr-2\">\r\n                {this.renderComponentBody()}\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage);\r\n","import React, { Component } from 'react';\r\nimport Tweet from '../tweet/tweet';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nclass PublicFeed extends Component {\r\n  renderFeed() {\r\n    // Server will check if the viewer has access to this profile.\r\n    // hiddentTweets = true if access is denied.\r\n    if (this.props.profile.hiddenTweets) {\r\n      return <div className=\"container-fluid\">\r\n        <p className=\"text-center small font-italic my-5 text-secondary\">This profile is private.</p></div>\r\n    } else if (this.props.profile.tweets.length === 0) {\r\n      return <div className=\"container-fluid\">\r\n        <p className=\"text-center small font-italic my-5 text-secondary\">{this.props.profile.username} has no tweets.</p></div>\r\n    } else {\r\n      let tweets = this.props.profile.tweets;\r\n\r\n      if (tweets.length) {\r\n        return tweets.slice().reverse().map((tweet) => <Tweet data={tweet} isDashboard={false} key={tweet._id}/>);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n        <h5>Tweets:</h5>\r\n        {this.renderFeed()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicFeed);\r\n","import React, { Component } from 'react';\r\nimport Header from '../header/header'\r\nimport PublicFeed from '../public-feed/publicFeed'\r\nimport Bio from '../bio/bio';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Followers from '../followers/followers';\r\nimport Following from '../following/following';\r\nimport { getProfileData, follow } from '../../state/actions/action';\r\nimport { getUsernameFromPath } from '../../helpers';\r\nimport './style.css';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProfileData: (username, token) => dispatch(getProfileData(username, token)),\r\n  follow: (data, token) => dispatch(follow(data, token))\r\n});\r\n\r\nclass PublicPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isFollowLoading: false,\r\n    }\r\n  }\r\n  // On load, get the username from the URL path and fetch profile data via actions\r\n  componentWillMount() {\r\n    let username = getUsernameFromPath(this.props.history.location.pathname);\r\n    this.refreshProfileData(username);\r\n\r\n    this.unlisten = this.props.history.listen((location) => {\r\n      let username = getUsernameFromPath(location.pathname);\r\n      this.refreshProfileData(username);\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    // If user logs in while on public profile page, refresh data\r\n    if (!this.props.user.isLoggedIn && newProps.user.isLoggedIn) this.refreshProfileData(newProps.profile.username);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  refreshProfileData(username) {\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    this.props.getProfileData(username, token).catch(error => console.log(error));\r\n  }\r\n\r\n  renderFollowBtn = () => {\r\n    if (this.state.isFollowLoading) return this.renderLoader();\r\n\r\n    let user = this.props.user;\r\n    let profile = this.props.profile;\r\n    let btnText = '';\r\n\r\n    if (user.isLoggedIn && user.username !== profile.username) {\r\n      if (user.outgoingFollowRequests.includes(profile.username)) {\r\n        btnText = 'Cancel follow request';\r\n      } else if (user.following.includes(profile.username)) {\r\n        btnText = 'Unfollow';\r\n      } else {\r\n        btnText = 'Follow';\r\n      }\r\n\r\n      return <button className=\"btn btn-block btn-primary\" onClick={this.handleFollowBtn}>{btnText}</button>\r\n\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleFollowBtn = () => {\r\n    this.setState({ isFollowLoading: true })\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    let data = {\r\n      profileId: this.props.profile._id\r\n    }\r\n\r\n    this.props.follow(data, token).then(res => {\r\n      this.setState({ isFollowLoading: false });\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n  renderComponentBody() {\r\n    switch (this.props.profile.currentView) {\r\n      case 'TWEETS':\r\n        return <PublicFeed />\r\n      case 'FOLLOWERS':\r\n        return <Followers isDashboard={false} />\r\n      case 'FOLLOWING':\r\n        return <Following isDashboard={false} />\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderLoader = () => {\r\n    return <div className=\"text-center my-5 py-5\"><Spinner\r\n      variant=\"primary\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n    /></div>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pb-5\">\r\n        <Header\r\n          stats={this.props.profile.stats}\r\n          splashImgUrl={this.props.profile.splashImgUrl}\r\n          isDashboard={false} />\r\n\r\n        {this.props.profile.username === null ? this.renderLoader() :\r\n          <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3 mb-5 mr-2\">\r\n                <Bio data={this.props.profile} />\r\n                {this.renderFollowBtn()}\r\n              </div>\r\n\r\n              <div className=\"col-sm-7 mb-2 mr-2\">\r\n                {this.renderComponentBody()}\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PublicPage));\r\n","// Validators\r\nexport const isRequired = (name, value) => {\r\n    if (!value) return '*This field is required.';\r\n    return true;\r\n}\r\n\r\nexport const minLength = (name, value, minLength) => {\r\n    if (value.length < minLength) return '*Minimum length: ' + minLength;\r\n    return true;\r\n}\r\n\r\nexport const maxLength = (name, value, maxLength) => {\r\n    if (value.length > maxLength) return '*Maximum length: ' + maxLength;\r\n    return true;\r\n}\r\n\r\nexport const passwordsMatch = (value1, value2) => {\r\n    if (value1 !== value2) return '*Passwords do not match.'\r\n    return true;\r\n}\r\n\r\nexport const isValidEmail = (name, value) => {\r\n    let emailSplit = value.split('');\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < emailSplit.length; i++) {\r\n        if (emailSplit[i] === '@') count++;\r\n    }\r\n\r\n    if (count !== 1) return '*Please enter a valid email address.';\r\n    return true;\r\n}\r\n\r\nexport const isAlphaOnly = (name, value) => {\r\n    var regex = new RegExp('^[a-zA-Z]+$');\r\n    if (value && regex.test(value) === false) return '*This field only accepts letters of the alphabet.';\r\n    return true;\r\n}\r\n\r\nexport const isAlphaNumeric = (name, value) => {\r\n    var regex = new RegExp('^[a-zA-Z0-9]+$');\r\n    if (value && regex.test(value) === false) return '*This field only accepts alphanumeric characters.';\r\n    return true;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserData, changePassword, deleteAccount } from '../../state/actions/action';\r\nimport { isRequired, isAlphaOnly, isValidEmail, minLength, passwordsMatch } from '../formValidators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateUserData: (data, token) => dispatch(updateUserData(data, token)),\r\n  changePassword: (data, token) => dispatch(changePassword(data, token)),\r\n  deleteAccount: (data, token) => dispatch(deleteAccount(data, token)),\r\n});\r\n\r\nclass SettingsPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isProfileFormLoading: false,\r\n      isPasswordFormLoading: false,\r\n      isDeleteFormLoading: false,\r\n      serverRes: {},\r\n      city: '',\r\n      state: '',\r\n      bio: '',\r\n      email: '',\r\n      editProfileInfo: false,\r\n      changePassword: false,\r\n      deleteAccount: false,\r\n      deleteAccountPassword: '',\r\n      settings: {\r\n        displayEmail: false,\r\n        displayLocation: false,\r\n        displayBirthday: false,\r\n        isPrivate: false\r\n      },\r\n      errors: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        city: '',\r\n        state: '',\r\n        bio: '',\r\n        email: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fillFormsWithProps(this.props);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.fillFormsWithProps(newProps)\r\n  }\r\n\r\n  fillFormsWithProps(props) {\r\n    let state = {\r\n      ...this.state,\r\n      city: props.user.city,\r\n      state: props.user.state,\r\n      bio: props.user.bio,\r\n      email: props.user.email,\r\n      displayEmail: props.user.settings.displayEmail,\r\n      displayLocation: props.user.settings.displayLocation,\r\n      displayBirthday: props.user.settings.displayBirthday,\r\n      isPrivate: props.user.settings.isPrivate\r\n    }\r\n    this.setState(state)\r\n  }\r\n\r\n  toggleEditProfileInfo = () => {\r\n    this.setState(oldState => ({ editProfileInfo: !oldState.editProfileInfo }));\r\n  }\r\n\r\n  toggleChangePassword = () => {\r\n    this.setState(oldState => ({ changePassword: !oldState.changePassword }));\r\n  }\r\n\r\n  toggleDeleteAccount = () => {\r\n    this.setState(oldState => ({ deleteAccount: !oldState.deleteAccount }))\r\n  }\r\n\r\n  renderDeleteAccountForm = () => {\r\n    return (<form onChange={this.formChangeHandler} onSubmit={this.deleteAccountFormSubmitHandler}>\r\n      <div className=\"btn-container row py-1 pr-3 mt-3 d-flex flex-row justify-content-end\">\r\n        {this.state.isPasswordFormLoading ? this.renderLoader() : <input type=\"submit\" className=\"btn btn-sm btn-success ml-1 mb-2\" value=\"Delete Account\" />}\r\n        <button className=\"btn btn-sm btn-danger ml-1 mb-2\" onClick={this.toggleDeleteAccount}>Cancel</button>\r\n      </div>\r\n\r\n      <p className=\"text-center\">To delete your account, please enter your password:</p>\r\n      <input onChange={this.formInputHandler} className=\"form-control\" type=\"password\" name=\"deleteAccountPassword\" />\r\n      <p className=\"small text-danger font-italic\">{this.state.errors.deleteAccountPassword}</p>\r\n    </form>)\r\n  }\r\n\r\n  renderChangePasswordForm = () => {\r\n    if (this.state.changePassword) {\r\n      return (<form onChange={this.formChangeHandler} onSubmit={this.changePasswordFormSubmitHandler}>\r\n        <div className=\"btn-container row py-1 pr-3 mt-3 d-flex flex-row justify-content-end\">\r\n          {this.state.isPasswordFormLoading ? this.renderLoader() : <input type=\"submit\" className=\"btn btn-sm btn-success ml-1 mb-2\" value=\"Save New Password\" />}\r\n          <button className=\"btn btn-sm btn-danger ml-1 mb-2\" onClick={this.toggleChangePassword}>Cancel</button>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Enter your password:</label>\r\n          <input type=\"password\" className=\"form-control\" name=\"oldPassword\" />\r\n          <p className=\"small text-danger font-italic\">{this.state.errors.oldPassword}</p>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Choose a new password:</label>\r\n          <input type=\"password\" className=\"form-control\" name=\"newPassword\" />\r\n          <p className=\"small text-danger font-italic\">{this.state.errors.newPassword}</p>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Re-enter your new password:</label>\r\n          <input type=\"password\" className=\"form-control\" name=\"newPassword2\" />\r\n          <p className=\"small text-danger font-italic\">{this.state.errors.newPassword2}</p>\r\n        </div>\r\n      </form>)\r\n    }\r\n  }\r\n\r\n  formChangeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({ [name + 'Touched']: true });\r\n    this.validateField(name, value);\r\n  }\r\n\r\n  isFormValid = (keys) => {\r\n\r\n    keys.forEach(key => {\r\n      this.validateField(key, this.state[key]);\r\n    });\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (this.state.errors[keys[i]]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  deleteAccountFormSubmitHandler = (e) => {\r\n    this.setState({ isDeleteFormLoading: true })\r\n    e.preventDefault();\r\n\r\n    if (this.isFormValid(['deleteAccountPassword'])) {\r\n      const token = sessionStorage.getItem('twitterCloneToken');\r\n      const data = {\r\n        password: e.target.deleteAccountPassword.value\r\n      }\r\n\r\n      this.props.deleteAccount(data, token).then(res => {\r\n        this.setState({ serverRes: res, isDeleteFormLoading: false });\r\n        if (res.success) {\r\n          this.setState({ deleteAccount: false })\r\n          sessionStorage.removeItem('twitterCloneToken');\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  editProfileFormSubmitHandler = (e) => {\r\n    this.setState({ isProfileFormLoading: true })\r\n    e.preventDefault();\r\n\r\n    let data = {\r\n      city: e.target.city.value,\r\n      state: e.target.state.value,\r\n      email: e.target.email.value,\r\n      bio: e.target.bio.value,\r\n      settings: {\r\n        displayEmail: e.target.displayEmail.checked,\r\n        displayLocation: e.target.displayLocation.checked,\r\n        displayBirthday: e.target.displayBirthday.checked,\r\n        isPrivate: e.target.isPrivate.checked,\r\n\r\n      }\r\n    }\r\n\r\n    if (this.isFormValid(Object.keys(data))) {\r\n      const token = sessionStorage.getItem('twitterCloneToken');\r\n      this.props.updateUserData(data, token).then(res => {\r\n        this.setState({ serverRes: res, isProfileFormLoading: false });\r\n        if (res.success) this.setState({ editProfileInfo: false })\r\n      })\r\n    }\r\n  }\r\n\r\n  changePasswordFormSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isPasswordFormLoading: true })\r\n    // Back-end only requires these two properties.\r\n    let data = {\r\n      password: e.target.oldPassword.value,\r\n      newPassword: e.target.newPassword.value,\r\n    }\r\n\r\n    if (this.isFormValid(Object.keys(data))) {\r\n      const token = sessionStorage.getItem('twitterCloneToken');\r\n      this.props.changePassword(data, token).then(res => {\r\n        this.setState({ serverRes: res, isPasswordFormLoading: false });\r\n        if (res.success) this.setState({ changePassword: false })\r\n      })\r\n    }\r\n  }\r\n\r\n  validateField = (name, value) => {\r\n    switch (name) {\r\n      case 'city':\r\n        this.setErrors('city', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n        break;\r\n      case 'state':\r\n        this.setErrors('state', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n        break;\r\n      case 'email':\r\n        this.setErrors('email', [isRequired(name, value), isValidEmail(name, value)]);\r\n        break;\r\n      case 'bio':\r\n        this.setErrors('bio', [isRequired(name, value)]);\r\n        break;\r\n      case 'oldPassword':\r\n        this.setErrors('oldPassword', [isRequired(name, value)]);\r\n        break;\r\n      case 'newPassword':\r\n        this.setErrors('newPassword', [isRequired(name, value), minLength(name, value, 6)]);\r\n        break;\r\n      case 'newPassword2':\r\n        this.setErrors('newPassword2', [isRequired(name, value), passwordsMatch(this.state.newPassword, value)]);\r\n        break;\r\n      case 'deleteAccountPassword':\r\n        this.setErrors('deleteAccountPassword', [isRequired(name, value)]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  setErrors(key, validatorResults) {\r\n    let errors = { ...this.state }.errors;\r\n    errors[key] = '';\r\n    this.setState({ errors: errors })\r\n\r\n    validatorResults.forEach(result => {\r\n      if (result !== true) {\r\n        errors[key] = result;\r\n        this.setState({ errors: errors });\r\n      }\r\n    })\r\n  }\r\n\r\n  formInputHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  renderEditProfileForm() {\r\n    if (this.state.editProfileInfo) {\r\n      return (\r\n        <form onChange={this.formChangeHandler} onSubmit={this.editProfileFormSubmitHandler}>\r\n          <div className=\"btn-container row py-1 pr-3 mt-3 d-flex flex-row justify-content-end\">\r\n            {this.state.isProfileFormLoading ? this.renderLoader() : <input type=\"submit\" className=\"btn btn-sm btn-success ml-1 mb-2\" value=\"Save Profile Info\" />}\r\n            <button className=\"btn btn-sm btn-danger ml-1 mb-2\" onClick={this.toggleEditProfileInfo}>Cancel</button>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-sm-6\">\r\n              <label>City:</label>\r\n              <input type=\"text\" placeholder=\"City\" value={this.state.city} onChange={this.formInputHandler} name=\"city\" className=\"form-control\" />\r\n              <p className=\"small text-danger font-italic\">{this.state.errors.city}</p>\r\n            </div>\r\n\r\n            <div className=\"form-group col-sm-6\">\r\n              <label>State:</label>\r\n              <input type=\"text\" placeholder=\"State\" value={this.state.state} onChange={this.formInputHandler} name=\"state\" className=\"form-control\" />\r\n              <p className=\"small text-danger font-italic\">{this.state.errors.state}</p>\r\n            </div>\r\n\r\n            <div className=\"form-group col-sm-6\">\r\n              <label>Email address:</label>\r\n              <input type=\"text\" placeholder=\"Email address\" value={this.state.email} onChange={this.formInputHandler} name=\"email\" className=\"form-control\" />\r\n              <p className=\"small text-danger font-italic\">{this.state.errors.email}</p>\r\n            </div>\r\n\r\n            <div className=\"form-group col-sm-6\">\r\n              <label>Bio:</label>\r\n              <input type=\"text\" placeholder=\"Bio\" value={this.state.bio} name=\"bio\" onChange={this.formInputHandler} className=\"form-control\" />\r\n              <p className=\"small text-danger font-italic\">{this.state.errors.bio}</p>\r\n            </div>\r\n\r\n            <div className=\"form-group col-sm-12 d-flex flex-row justify-content-between align-items-center\">\r\n              <div className=\"d-flex flex-wrap flex-row justify-content-center align-items-center text-center px-2\"><input type=\"checkbox\" name=\"displayEmail\" value=\"displayEmail\" checked={this.state.displayEmail} onChange={this.formInputHandler} /> Display email</div>\r\n              <div className=\"d-flex flex-wrap flex-row justify-content-center align-items-center text-center px-2\"><input type=\"checkbox\" name=\"displayLocation\" value=\"displayLocation\" checked={this.state.displayLocation} onChange={this.formInputHandler} /> Display location</div>\r\n              <div className=\"d-flex flex-wrap flex-row justify-content-center align-items-center text-center px-2\"><input type=\"checkbox\" name=\"displayBirthday\" value=\"displayBirthday\" checked={this.state.displayBirthday} onChange={this.formInputHandler} /> Display birthday</div>\r\n              <div className=\"d-flex flex-wrap flex-row justify-content-center align-items-center text-center px-2\"><input type=\"checkbox\" name=\"isPrivate\" value=\"isPrivate\" checked={this.state.isPrivate} onChange={this.formInputHandler} /> Private tweets</div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderLoader = () => {\r\n    return <div className=\"text-center\"><Spinner\r\n      variant=\"success\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n    /></div>\r\n  }\r\n\r\n  renderServerMsg() {\r\n    if (!this.state.serverRes.message) return null;\r\n\r\n    // Set className\r\n    let className = 'text-center small font-italic';\r\n\r\n    if (this.state.serverRes.success) {\r\n      className += ' text-success';\r\n    } else if (!this.state.serverRes.success) {\r\n      className += ' text-danger';\r\n    }\r\n\r\n    return (<p className={className}>*{this.state.serverRes.message}</p>);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid d-flex py-5 justify-content-center align-items-center\">\r\n        <div id=\"settings-content-container\" className=\"shadow p-4 mt-5 bg-light\">\r\n          <div className=\"pb-3\">\r\n            <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n\r\n            <h1>Account settings</h1>\r\n            <h5>{this.props.user.firstName} {this.props.user.lastName}</h5>\r\n            <h6>@{this.props.user.username}</h6>\r\n          </div>\r\n\r\n          <div>{this.renderServerMsg()}</div>\r\n\r\n          {\r\n            this.state.editProfileInfo ? this.renderEditProfileForm() :\r\n              <div>\r\n                <div className=\"btn-container row py-1 mt-3\">\r\n                  <button className=\"btn btn-sm btn-primary ml-auto mr-3\" onClick={this.toggleEditProfileInfo}>Edit profile</button>\r\n                </div>\r\n\r\n                <p className=\"py-1\"><span className=\"font-weight-bold\">Location:</span>  {this.props.user.city}, {this.props.user.state}</p>\r\n                <p className=\"py-1\"><span className=\"font-weight-bold\">Email address:</span>  {this.props.user.email}</p>\r\n                <p className=\"py-1\"><span className=\"font-weight-bold\">Bio:</span>  {this.props.user.bio}</p>\r\n              </div>\r\n          }\r\n\r\n          {\r\n            this.state.changePassword ? this.renderChangePasswordForm() :\r\n              <div className=\"btn-container row py-1 mt-3\">\r\n                <button className=\"btn btn-sm btn-primary ml-auto mr-3\" onClick={this.toggleChangePassword}>Change password</button>\r\n              </div>\r\n          }\r\n\r\n          {\r\n            this.state.deleteAccount ? this.renderDeleteAccountForm() :\r\n              <div className=\"btn-container row py-1 mt-3\">\r\n                <button className=\"btn btn-sm btn-danger ml-auto mr-3\" onClick={this.toggleDeleteAccount}>Delete Account</button>\r\n              </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass ErrorPage extends Component {\r\n    render() {\r\n        return (\r\n            <h1>ERROR</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register, uploadImage } from '../../state/actions/action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { isRequired, minLength, passwordsMatch, isValidEmail, isAlphaNumeric, isAlphaOnly } from '../formValidators';\r\nimport { getBase64FromUrl } from '../../helpers';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    register: (data) => dispatch(register(data)),\r\n    uploadImage: (base64, type, token) => dispatch(uploadImage(base64, type, token))\r\n});\r\n\r\nclass RegistrationForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            serverRes: {},\r\n            errors: {\r\n                firstName: '',\r\n                lastName: '',\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                password2: '',\r\n                city: '',\r\n                state: '',\r\n                birthday: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    formChangeHandler = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n        this.setState({ [name + 'Touched']: true });\r\n        this.validateField(name, value);\r\n    }\r\n\r\n    setErrors(key, validatorResults) {\r\n        let errors = { ...this.state }.errors;\r\n        errors[key] = '';\r\n        this.setState({ errors: errors })\r\n\r\n        validatorResults.forEach(result => {\r\n            if (result !== true) {\r\n                errors[key] = result;\r\n                this.setState({ errors: errors })\r\n            }\r\n        })\r\n    }\r\n\r\n    validateField(name, value) {\r\n        switch (name) {\r\n            case 'firstName':\r\n                this.setErrors('firstName', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n                break;\r\n            case 'lastName':\r\n                this.setErrors('lastName', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n                break;\r\n            case 'username':\r\n                this.setErrors('username', [isRequired(name, value), isAlphaNumeric(name, value)]);\r\n                break;\r\n            case 'email':\r\n                this.setErrors('email', [isRequired(name, value), isValidEmail(name, value)]);\r\n                break;\r\n            case 'password':\r\n                this.setErrors('password', [isRequired(name, value), minLength(name, value, 6)]);\r\n                break;\r\n            case 'password2':\r\n                this.setErrors('password2', [isRequired(name, value), passwordsMatch(this.state.password, value)]);\r\n                break;\r\n            case 'city':\r\n                this.setErrors('city', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n                break;\r\n            case 'state':\r\n                this.setErrors('state', [isRequired(name, value), isAlphaOnly(name, value)]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    isFormValid(e) {\r\n        // TODO: Validate all fields\r\n        let data = {\r\n            firstName: e.target.firstName.value,\r\n            lastName: e.target.lastName.value,\r\n            username: e.target.username.value,\r\n            email: e.target.email.value,\r\n            password: e.target.password.value,\r\n            password2: e.target.password2.value,\r\n            city: e.target.city.value,\r\n            state: e.target.state.value,\r\n            birthday: e.target.birthday.value\r\n        }\r\n\r\n        for (let key in data) {\r\n            this.validateField(key, data[key]);\r\n        }\r\n\r\n        // Check that all fields have values and no error messages\r\n        let keys = Object.keys(this.state.errors);\r\n        let validChecks = [];\r\n\r\n        keys.forEach(key => {\r\n            if (this.state[key] && !this.state.errors[key]) {\r\n                validChecks.push(true);\r\n            } else {\r\n                validChecks.push(false);\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < validChecks.length; i++) {\r\n            if (validChecks[i] === false) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true })\r\n        let isValid = this.isFormValid(e);\r\n\r\n        if (!isValid) {\r\n            this.setState({ isLoading: false });\r\n        } else if (this.isFormValid(e)) {\r\n            let data = {\r\n                firstName: e.target.firstName.value,\r\n                lastName: e.target.lastName.value,\r\n                username: e.target.username.value,\r\n                email: e.target.email.value,\r\n                password: e.target.password.value,\r\n                password2: e.target.password2.value,\r\n                city: e.target.city.value,\r\n                state: e.target.state.value,\r\n                birthday: e.target.birthday.value\r\n            }\r\n\r\n            this.props.register(data).then(res => {\r\n                this.setState({ serverRes: res, isLoading: false });\r\n                // Set default placeholder images\r\n                let proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n                let profileImgUrl = 'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\r\n                let splashImgUrl = 'https://image.freepik.com/free-photo/blue-sky-with-clouds_1112-454.jpg'\r\n\r\n                if (res.success) return Promise.all([\r\n                    // convert to base64\r\n                    getBase64FromUrl(proxyUrl + profileImgUrl),\r\n                    getBase64FromUrl(proxyUrl + splashImgUrl)\r\n                ])\r\n            }).then(results => {\r\n                let token = sessionStorage.getItem('twitterCloneToken');\r\n\r\n                return Promise.all([\r\n                    // upload each file as splash and profile\r\n                    this.props.uploadImage(results[0], 'PROFILE', token),\r\n                    this.props.uploadImage(results[1], 'SPLASH', token)\r\n                ])\r\n            }).then(results => {\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    renderValidationMsg = () => {\r\n        if (!this.state.validationMsg) return null;\r\n        return (<p className=\"text-center small font-italic text-danger\">{this.state.validationMsg}</p>)\r\n    }\r\n\r\n    renderServerMsg = () => {\r\n        if (!this.state.serverRes.message) return null;\r\n\r\n        // Set className\r\n        let className = 'text-center small font-italic';\r\n\r\n        if (this.state.serverRes.success) {\r\n            className += ' text-success';\r\n        } else if (!this.state.serverRes.success) {\r\n            className += ' text-danger';\r\n        }\r\n\r\n        return (<p className={className}>*{this.state.serverRes.message}</p>);\r\n    }\r\n\r\n    renderSubmitBtn = () => {\r\n        if (this.state.isLoading) {\r\n            return <div className=\"text-center\"><Spinner\r\n                variant=\"primary\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n            /></div>\r\n        } else {\r\n            return <input type=\"submit\" className=\"btn btn-sm btn-primary mx-auto\" value=\"Sign up\" />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.formSubmitHandler} id=\"registration-form\" onChange={this.formChangeHandler} className=\"m-0 bg-light\">\r\n                <div className=\"p-2\">{this.renderServerMsg()}</div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>First name:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"First name\" name=\"firstName\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.firstName}</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>Last name:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"Last name\" name=\"lastName\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.lastName}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>Choose a username:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"username\" name=\"username\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.username}</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>Enter your email address:</label>\r\n                        <input type=\"email\" className=\"form-control m-1\" placeholder=\"Email Address\" name=\"email\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.email}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>Choose a password:</label>\r\n                        <input type=\"password\" className=\"form-control m-1\" placeholder=\"password\" name=\"password\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.password}</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-sm-6\">\r\n                        <label>Re-enter your password:</label>\r\n                        <input type=\"password\" className=\"form-control m-1\" placeholder=\"Re-enter password\" name=\"password2\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.password2}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-sm-4\">\r\n                        <label>Enter your city:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"City\" name=\"city\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.city}</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-sm-4\">\r\n                        <label>Enter your state:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"State\" name=\"state\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.state}</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-sm-4\">\r\n                        <label>Enter your birthday:</label>\r\n                        <input type=\"text\" className=\"form-control m-1\" placeholder=\"Birthday\" name=\"birthday\"></input>\r\n                        <small className=\"text-center text-danger small font-italic\">{this.state.errors.birthday}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <div className=\"col text-center\">\r\n                        {this.renderSubmitBtn()}\r\n                    </div>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RegistrationForm));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegistrationForm from '../registration-form/registrationForm'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './style.css';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nclass RegistrationPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid min-h-100 py-5 d-flex justify-content-center align-items-center\">\r\n                <div id=\"registration-content-container\" className=\"shadow p-4 my-5 bg-light\">\r\n                    <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                    <h2 className=\"pb-2\">Create your account</h2>\r\n                    <RegistrationForm />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RegistrationPage));\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport LoginForm from '../login-form/loginForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nclass LoginPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid min-h-100 d-flex justify-content-center align-items-center\">\r\n                <div id=\"login-content-container\" className=\"shadow p-5 bg-light\">\r\n                    <FontAwesomeIcon icon={['fas', 'dove']} className=\"icon-sm mb-2 text-primary\" />\r\n                    <h2 className=\"pb-2\">Log in</h2>\r\n                    <LoginForm />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(LoginPage));\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUserData, getProfileData } from './state/actions/action';\r\nimport NavBar from './components/nav-bar/navBar';\r\nimport HomePage from './components/home-page/homePage';\r\nimport DashboardPage from './components/dashboard-page/dashboardPage';\r\nimport PublicPage from './components/public-page/publicPage';\r\nimport SettingsPage from './components/settings-page/settingsPage';\r\nimport ErrorPage from './components/error-page/errorPage';\r\nimport './App.css';\r\nimport RegistrationPage from './components/registration-page/registrationPage';\r\nimport LoginPage from './components/login-page/loginPage';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faHeart as fasHeart, faReply, faCommentDots, faDove, faTimes, faCheck, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\r\n\r\nlibrary.add(fasHeart, farHeart, faReply, faCommentDots, faDove, faTimes, faCheck, faTrash);\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUserData: (token) => dispatch(getUserData(token)),\r\n  getProfileData: (username) => dispatch(getProfileData(username))\r\n});\r\n\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    this.detectBrowserSession();\r\n  }\r\n\r\n  detectBrowserSession = () => {\r\n    let token = sessionStorage.getItem('twitterCloneToken');\r\n    if (token) this.props.getUserData(token);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <NavBar data={this.props.user} />\r\n        <Switch>\r\n          <Route path=\"/\" component={HomePage} exact />\r\n          <Route path=\"/dashboard\" component={DashboardPage} />\r\n          <Route path=\"/profile/:username\" component={PublicPage} />\r\n          <Route path=\"/settings\" component={SettingsPage} />\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <Route path=\"/registration\" component={RegistrationPage} />\r\n          <Route component={ErrorPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const initialProfileState = {\r\n  username: null,\r\n  id: null,\r\n  firstName: null,\r\n  lastName: null,\r\n  dateJoined: null,\r\n  email: null,\r\n  city: null,\r\n  state: null,\r\n  profilePic: null,\r\n  tweets: [],\r\n  followers: [],\r\n  following: [],\r\n  followersUserCards: [],\r\n  followingUserCards:[],\r\n  currentView: 'TWEETS',\r\n  settings: {\r\n    displayEmail: false,\r\n    displayLocation: false,\r\n    displayBirthday: false\r\n  },\r\n  stats: {\r\n    tweets: 0,\r\n    followers: 0,\r\n    following: 0,\r\n    likes: 0\r\n  }\r\n}\r\n\r\nexport const initialUserState = {\r\n  isLoggedIn: false,\r\n  dateJoined: null,\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  username: null,\r\n  password: null,\r\n  city: null,\r\n  state: null,\r\n  birthday: null,\r\n  bio: null,\r\n  profileImgUrl: null,\r\n  splashImgUrl: null,\r\n  selectedFileProfileImg: null,\r\n  selectedFileBase64ProfileImg: null,\r\n  selectedFileSplashImg: null,\r\n  selectedFileBase64SplashImg: null,\r\n  feed: [],\r\n  tweets: [],\r\n  followers: [],\r\n  following: [],\r\n  incomingFollowRequests: [],\r\n  outgoingFollowRequests: [],\r\n  followersUserCards: [],\r\n  followingUserCards: [],\r\n  incomingFollowRequestsUserCards: [],\r\n  outgoingFollowRequestsUserCards: [],\r\n  settings: {},\r\n  currentView: 'TWEETS',\r\n  stats: {\r\n    tweets: 0,\r\n    followers: 0,\r\n    following: 0,\r\n    likes: 0\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    profile: profileReducer\r\n});","import { initialUserState } from '../initialState'\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_USER_STATE':\r\n      return { ...state, ...action.payload };\r\n    case 'CLEAR_USER_STATE':\r\n      return initialUserState;\r\n    case 'UPDATE_TWEET':\r\n      // Look for tweet that matches action.payload and replace \r\n      let newState = { ...state };\r\n      let tweetIndex = newState.tweets.findIndex(tweet => {\r\n        return tweet._id === action.payload.tweet._id\r\n      })\r\n\r\n      // Update stats if necessary\r\n      if (action.payload.profile.username === newState.username) {\r\n        newState.stats = action.payload.profile.stats\r\n      }\r\n\r\n      newState.tweets[tweetIndex] = action.payload.tweet;\r\n      return newState;\r\n    case 'SET_USER_CURRENT_VIEW':\r\n      return { ...state, currentView: action.payload }\r\n    case 'UPDATE_USER_MESSAGES':\r\n      return { ...state, messages: action.payload.messages, stats: action.payload.stats }\r\n    default:\r\n      return state\r\n  }\r\n}","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_PROFILE_STATE':\r\n      return { ...state, ...action.payload };\r\n    case 'UPDATE_TWEET':\r\n      // Look for tweet that matches action.payload.tweet and replace \r\n      let newState = { ...state };\r\n      let tweetIndex = newState.tweets.findIndex(tweet => {\r\n        return tweet._id === action.payload.tweet._id\r\n      })\r\n\r\n      newState.tweets[tweetIndex] = action.payload.tweet;\r\n\r\n      // Update stats if necessary\r\n      if (action.payload.profile.username === newState.username) {\r\n        newState.stats = action.payload.profile.stats\r\n      }\r\n\r\n      return newState;\r\n    case 'SET_PROFILE_CURRENT_VIEW':\r\n      return { ...state, currentView: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { initialProfileState, initialUserState } from './initialState';\r\n\r\nexport default function configureStore(initialState) {\r\n\r\n  initialState = {\r\n    user : initialUserState,\r\n    profile: initialProfileState\r\n  };\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './state/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={configureStore()}><App /></Provider >, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}